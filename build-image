#!/usr/bin/env bash

set -e

__tag() {
  local scala="${1}"
  local kafka="${2}"
  printf "${scala}-${kafka}"
}

DEFAULT_ARG_JRE='adoptopenjdk:11.0.11_9-jre-hotspot-focal'
DEFAULT_ARG_SCALA='2.13'
DEFAULT_ARG_KAFKA='2.8.0'
DEFAULT_ARG_TAG=$(__tag "${DEFAULT_ARG_SCALA}" "${DEFAULT_ARG_KAFKA}")

__show_help() {
  echo "$0"
  echo "     -h, --help                 Display this message"
  echo "     -j, --jre       <string>   Set jre version   (default ${DEFAULT_ARG_JRE})"
  echo "     -s, --scala     <string>   Set scala version (default ${DEFAULT_ARG_SCALA})"
  echo "     -k, --kafka     <string>   Set kafka version (default ${DEFAULT_ARG_KAFKA})"
  echo "     -t, --tag       <string>   Set image tag     (default ${DEFAULT_ARG_TAG})"
  echo "     -p, --push                 Push image after build is complete"
}

ARG_JRE=$DEFAULT_ARG_JRE
ARG_SCALA=$DEFAULT_ARG_SCALA
ARG_KAFKA=$DEFAULT_ARG_KAFKA
ARG_TAG=
ARG_PUSH=
while (($#)); do
  case "${1}" in
    -h|--help)
      __show_help
      exit 0
      ;;
    -j|--jre)
      ARG_JRE="${2}"
      shift 2
      ;;
    -s|--scala)
      ARG_SCALA="${2}"
      shift 2
      ;;
    -k|--kafka)
      ARG_KAFKA="${2}"
      shift 2
      ;;
    -t|--tag)
      ARG_TAG="${2}"
      shift 2
      ;;
    -p|--push)
      ARG_PUSH="true"
      shift
      ;;
    *)
      echo "Wrong arguments"
      __show_help
      exit 1
      ;;
  esac
done

[ -z "${ARG_TAG}" ] && ARG_TAG=$(__tag "${ARG_SCALA}" "${ARG_KAFKA}")

IMAGE_NAME="moukoublen/kafka:${ARG_TAG}"

echo -e "\e[34m>>>\e[0m Building \e[34m${IMAGE_NAME}\e[0m"
echo -e "             with jre      \e[34m${ARG_JRE}\e[0m"
echo -e "             with scala    \e[34m${ARG_SCALA}\e[0m"
echo -e "             with kafka    \e[34m${ARG_KAFKA}\e[0m"
echo ""

#docker pull "${IMAGE_NAME}"

docker build . \
  --build-arg jre="${ARG_JRE}" \
  --build-arg kafka_version="${ARG_KAFKA}" \
  --build-arg scala_version="${ARG_SCALA}" \
  --tag "${IMAGE_NAME}"

if [[ "${ARG_PUSH}" == "true" ]]; then
  echo -e "\e[34m>>>\e[0m Pushing \e[34m${IMAGE_NAME}\e[0m"
  docker push "${IMAGE_NAME}"
fi
